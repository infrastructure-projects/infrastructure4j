<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">
    <property name="charset" value="UTF-8"/>
    <!--    <property name="severity" value="warning"/>-->

    <module name="BeforeExecutionExclusionFileFilter">
        <property name="fileNamePattern"
                  value=".*Proto\.java$|.*Grpc\.java|Generate.*\.java|.*Stub\.java|.*Config\.java"/>
    </module>

    <!-- 单行长度 -->
    <module name="FileLength">
        <property name="max" value="2500"/>
    </module>

    <module name="TreeWalker">
        <!-- 注释的格式验证 -->
        <module name="AnnotationLocation">
            <property name="allowSamelineMultipleAnnotations" value="false"/>
            <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
            <property name="allowSamelineParameterizedAnnotation" value="false"/>
        </module>
        <!-- 注释的样式 -->
        <module name="AnnotationUseStyle">
            <property name="closingParens" value="never"/>
            <property name="trailingArrayComma" value="never"/>
            <property name="elementStyle" value="compact_no_array"/>
        </module>
        <!-- @Override注解 -->
        <module name="MissingOverride"/>

        <!-- 代码块的检查 -->
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>
        <module name="EmptyBlock">
            <property name="option" value="text"/>
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected|ignore"/>
        </module>
        <module name="NeedBraces"/>
        <module name="LeftCurly">
            <property name="option" value="eol"/>
            <property name="ignoreEnums" value="false"/>
        </module>
        <module name="RightCurly">
            <property name="option" value="same"/>
        </module>
        <!-- class -->
        <module name="FinalClass"/>
        <module name="InterfaceIsType"/>
        <module name="OneTopLevelClass"/>
        <module name="ThrowsCount">
            <property name="max" value="5"/>
            <property name="ignorePrivateMethods" value="false"/>
        </module>
        <module name="VisibilityModifier">
            <property name="packageAllowed" value="true"/>
            <property name="protectedAllowed" value="true"/>
            <property name="allowPublicFinalFields" value="true"/>
            <property name="allowPublicImmutableFields" value="true"/>
        </module>
        <!-- coding -->
        <module name="UnusedLocalVariable"/>
        <module name="StringLiteralEquality"/>
        <module name="MultipleVariableDeclarations"/>

        <module name="ArrayTrailingComma"/>
        <module name="AvoidNoArgumentSuperConstructorCall"/>
        <module name="DeclarationOrder">
            <property name="ignoreConstructors" value="true"/>
            <property name="ignoreModifiers" value="true"/>
        </module>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="ExplicitInitialization">
            <property name="onlyObjectReferences" value="true"/>
        </module>
        <module name="FallThrough"/>
        <module name="IllegalCatch">
            <property name="illegalClassNames" value="java.lang.Error,OutOfMemoryError"/>
        </module>
        <module name="IllegalInstantiation">
            <property name="classes" value="java.lang.Boolean,java.lang.Integer,java.lang.Long"/>
        </module>
        <module name="IllegalType">
            <property name="tokens"
                      value="ANNOTATION_FIELD_DEF,METHOD_CALL,METHOD_DEF,METHOD_REF,PARAMETER_DEF,VARIABLE_DEF,PATTERN_VARIABLE_DEF,RECORD_DEF,RECORD_COMPONENT_DEF "/>
        </module>
        <module name="InnerAssignment"/>
        <module name="MissingSwitchDefault"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="5"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="3"/>
        </module>
        <!--        <module name="NoClone"/>-->
        <!--        <module name="NoEnumTrailingComma"/>-->
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="PackageDeclaration"/>
        <!--        <module name="ReturnCount">-->
        <!--            <property name="max" value="10"/>-->
        <!--            <property name="maxForVoid" value="10"/>-->
        <!--        </module>-->
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/>
        <module name="UnnecessarySemicolonInTryWithResources">
            <property name="allowWhenNoBraceAfterSemicolon" value="false"/>
        </module>
        <!-- import -->
        <module name="IllegalImport">
            <property name="illegalPkgs" value="sun, cn.hutool.log, cn.hutool.json"/>
        </module>
        <module name="UnusedImports"/>
        <!-- Javadoc -->
        <module name="InvalidJavadocPosition"/>
        <module name="JavadocBlockTagLocation"/>
        <module name="JavadocContentLocationCheck"/>
        <module name="JavadocType">
            <property name="authorFormat" value="\S"/>
            <property name="scope" value="protected"/>
            <property name="allowMissingParamTags" value="true"/>
            <property name="allowUnknownTags" value="true"/>
        </module>
        <module name="NonEmptyAtclauseDescription"/>
        <!--        <module name="WriteTag">-->
        <!--            <property name="tag" value="@since"/>-->
        <!--            <property name="tagFormat" value="[1-9\.]"/>-->
        <!--        </module>-->

        <module name="SummaryJavadocCheck">
            <property name="period" value=""/>
        </module>
        <module name="MissingJavadocType">
            <property name="skipAnnotations"
                      value="SpringBootApplication,Configuration,Bean,Schema,Generated,GrpcGenerated"/>
        </module>
        <module name="JavadocVariable">
            <property name="excludeScope" value="private"/>
            <property name="ignoreNamePattern" value="log|logger|value"/>
        </module>
        <module name="MissingJavadocMethod">
            <property name="excludeScope" value="private"/>
            <property name="allowMissingPropertyJavadoc" value="true"/>
            <property name="ignoreMethodNamesRegex" value="^get.*$|^set.*$|main"/>
            <property name="tokens" value="METHOD_DEF,ANNOTATION_FIELD_DEF"/>
            <property name="allowedAnnotations"
                      value="Override,Deprecated,Bean,Generated,ExceptionHandler,Pointcut,Around,After,AfterReturning,AfterThrowing,ConsumerHandler,ProducerHandler,Operation,EventListener"/>
        </module>
        <!-- content -->
        <module name="EmptyForInitializerPad"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore">
            <property name="allowLineBreaks" value="true"/>
        </module>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="SeparatorWrap">
            <property name="option" value="nl"/>
            <property name="tokens" value="DOT"/>
        </module>
        <module name="SingleSpaceSeparator"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround">
            <property name="allowEmptyLambdas" value="true"/>
            <property name="allowEmptyCatches" value="true"/>
            <property name="allowEmptyMethods" value="true"/>
            <property name="allowEmptyConstructors" value="true"/>
        </module>
        <!-- 数组的风格必须是 String [] -->
        <module name="ArrayTypeStyle"/>
        <!-- TODO的格式 -->
        <module name="TodoComment">
            <property name="format" value="todo:"/>
        </module>
        <!-- long的格式必须是L -->
        <module name="UpperEll"/>
        <!--        <module name="EmptyLineSeparator">-->
        <!--            <property name="allowMultipleEmptyLines" value="false"/>-->
        <!--        <property name="allowMultipleEmptyLines" value="false"/>-->
        <!--        <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>-->
        <!--        </module>-->

        <!-- 最多允许20行的匿名类 -->
        <module name="AnonInnerLength"/>
        <!-- 最多允许20行的lambda表达式 -->
        <module name="LambdaBodyLength">
            <property name="max" value="60"/>
        </module>

        <!-- 方法不能超过80行 -->
        <module name="ExecutableStatementCount">
            <property name="max" value="80"/>
        </module>
        <module name="MethodLength">
            <property name="max" value="80"/>
            <property name="countEmpty" value="false"/>
        </module>

        <!-- 限制最大的参数数量 -->
        <module name="ParameterNumber">
            <property name="max" value="8"/>
            <property name="tokens" value="METHOD_DEF"/>
        </module>
        <module name="RecordComponentNumber"/>

        <!-- 类型名 -->
        <module name="TypeName">
            <property name="format" value="^[A-Z][a-zA-Z0-9]*$"/>
        </module>

    </module>

</module>